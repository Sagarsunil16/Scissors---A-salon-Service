name: Deploy Scissors Backend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    env:
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create serviceAccount.json
        working-directory: ./Scissors_backend
        run: |
          mkdir -p src/secureDocs
          echo "$FIREBASE_SERVICE_ACCOUNT" > src/secureDocs/serviceAccount.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        working-directory: ./Scissors_backend
        run: |
          mkdir -p secureDocs
          echo "$FIREBASE_SERVICE_ACCOUNT" > secureDocs/serviceAccount.json
          docker build -t ${{ secrets.DOCKER_USERNAME }}/scissors-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/scissors-backend:latest

      - name: Upload Dockerrun.aws.json to S3
        working-directory: ./Scissors_backend
        run: |
            zip ../deploy.zip Dockerrun.aws.json
            aws s3 cp ../deploy.zip s3://scissors-eb-deploy/deploy.zip --region ap-south-1
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy new version to Elastic Beanstalk
        run: |
          VERSION_LABEL="backend-$(date +%s)"
          aws elasticbeanstalk create-application-version \
            --application-name scissors-app \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket=scissors-eb-deploy,S3Key=deploy.zip \
            --region ap-south-1

          aws elasticbeanstalk update-environment \
            --environment-name scissors-backend-env \
            --version-label "$VERSION_LABEL" \
            --region ap-south-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
